#include <iostream>
using namespace std;
// forward declaration
class complex;
class Calculator
{
public:
    int add(int a, int b)
    {
        return a + b;
    }
    int sumRealComplex(complex, complex);
    int sumImaginaryComplex(complex, complex);
};
class complex
{

    int a, b;
    // Individually declaring functions as friends

    // friend int Calculator ::sumRealComplex(complex o1, complex o2);
    // friend int Calculator ::sumImaginaryComplex(complex o1, complex o2);

    //Aliter:  declaring the entire Calculator class as friend

        friend class Calculator;

public:
    void setNumber(int n1, int n2)
    {
        a = n1;
        b = n2;
    }
    void printNumber()
    {
        cout << "Your number is " << a << " + " << b << "i" << endl;
    }
};

int Calculator::sumRealComplex(complex o1, complex o2)
{
    return (o1.a + o2.a);
};
int Calculator::sumImaginaryComplex(complex o1, complex o2)
{
    return (o1.b + o2.b);
};
int main()
{
    complex o1, o2;
    o1.setNumber(1, 4);
    o2.setNumber(3, 5);
    Calculator calc;
    int res = calc.sumRealComplex(o1, o2);
    int resImaginary= calc.sumImaginaryComplex(o1,o2);
    cout << "The sum of real part of o1 and o2 is " << res;
    cout << "The sum of Imaginary part of o1 and o2 is " << resImaginary;
    return 0;
}