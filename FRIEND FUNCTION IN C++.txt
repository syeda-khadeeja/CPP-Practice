#include <iostream>
using namespace std;

// 1 + 6i
// 3 + 5i
// --------
// 4 + 11i


class complex{
    int a , b;
    // friend function can also declared here
    // friend complex sumComplex(complex o1 , complex o2);
    public:
    void setNumber(int n1 , int n2){
        a=n1;
        b=n2;
    }
    // Below lines means that non member sumComplex - function is allowed 
    // to do anything with my private members.
    friend complex sumComplex(complex o1 , complex o2);
    void printNumber(){
      cout<<"your number is "<<a <<" + "<<b<<"i"<<endl;
    }

};
complex sumComplex(complex o1 , complex o2){
    complex o3;
    //   cout<<a;  This will throw error ( point no 6)
    o3.setNumber((o1.a + o2.a),(o1.b +o2.b));
    return o3;

}
int main(){
    complex c1 ,c2 , sum;
    c1.setNumber(1,6);
    c1.printNumber();
    c2.setNumber(3,5);
    c2.printNumber();
    sum = sumComplex(c1 , c2);
    sum.printNumber();
    return 0;
}
/*  properties of friend functions
1. Not in the scope of class
2. Since it is not in the scope of class, it cannot be called from the object 
of that class. c1.sumcomplex()==Invalid
3. Can be invoked without the help of any object
4. Usually contains the object as arguments.
5. can be declared inside public or private section of the class
6. It cannot access the member directly by their names 
and need object_name.member_name t access any member
 
        */